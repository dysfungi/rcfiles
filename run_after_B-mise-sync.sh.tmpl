#!/usr/bin/env bash
set -euo pipefail

if [[ "$0" != *"${ONLY_SCRIPTS:-}"* ]]; then
  echo >&2 "INFO: Only running scripts with '${ONLY_SCRIPTS}'; Skipping $0"
  exit 0
else
  echo >&2 "INFO: Starting $0"
fi

# https://mise.jdx.dev/installing-mise.html#installation-methods
if ! command -v mise > /dev/null; then
  echo >&2 'WARNING: Could not find mise; installing...'
  echo >&2 "         PATH=${PATH}"
  while read -n1 -p "Install mise-en-place? [y/n] " REPLY; do
    case "${REPLY}" in
      y*)
        echo
        break;;
      n*)
        echo
        exit 2;;
      *)
        ;;
    esac
  done
  curl "https://mise.run" | MISE_INSTALL_PATH="/usr/local/bin/mise" sh
fi

scriptName="$(basename $0)"
outFile="$(mktemp -t "${scriptName}.out")"
echo >&2 "INFO: Stdout file for ${scriptName} - ${outFile}"

userName="$(whoami)"
hostName="$(hostname)"
bakSuffix="${userName}.${hostName}"
sourceDir="{{ .chezmoi.sourceDir }}"
bakDir="${sourceDir}/backups"
bakFile="${bakDir}/mise-ls.${bakSuffix}"
export GIT_DIR="${sourceDir}/.git"
export GIT_WORK_TREE="${sourceDir}"

backup () {
  local clarifier="${1:?required}"
  local action="${2:?required}"

  mise ls > "${bakFile}"
  git add "${bakFile}"
  if [ -n "$(git status --porcelain -- "${bakDir}")" ]; then
    git commit --message "chore(backups): List mise tools ${clarifier} ${action} for ${userName} on ${hostName}" -- "${bakDir}"
  fi
}

mkdir -p "${bakDir}"

backup before install >> "${outFile}"
mise install --yes >> "${outFile}"
backup after install >> "${outFile}"

backup before upgrade >> "${outFile}"
mise upgrade --yes >> "${outFile}"
backup after upgrade >> "${outFile}"

echo >&2 "INFO: Ending $0"
